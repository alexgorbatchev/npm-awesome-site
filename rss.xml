<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:wfw="http://wellformedweb.org/CommentAPI/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
  xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
  xmlns:georss="http://www.georss.org/georss"
  xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
  xmlns:media="http://search.yahoo.com/mrss/"
  >
  <channel>
    <title>npm awesome</title>
    <atom:link href="http://feeds.feedburner.com/npmawesome" rel="self" type="application/rss+xml"/>
    <link>http://npmawesome.com</link>
    <description>Daily dose of awesome NPM modules for Node.js, old and new!</description>
    <lastBuildDate>Thu, 19 Jun 2014 16:40:15 GMT</lastBuildDate>
    <language>en</language>
    <sy:updatePeriod>daily</sy:updatePeriod>
    <sy:updateFrequency>2</sy:updateFrequency>
    <generator>awesomeness</generator>
    <pubDate>Thu, 19 Jun 2014 16:40:15 GMT</pubDate>

    
    
    
      
      
      
      <item>
        <title><![CDATA[Links for June 17, 2014]]></title>
        <link><![CDATA[http://npmawesome.com/posts/2014-06-17-links]]></link>
        <dc:creator><![CDATA[Alex Gorbatchev]]></dc:creator>
        <guid isPermaLink="true"><![CDATA[http://npmawesome.com/posts/2014-06-17-links]]></guid>
        <pubDate><![CDATA[Tue, 17 Jun 2014 17:36:34 GMT]]></pubDate>
        <description><![CDATA[<p><img src="http://npmawesome.com/images/posts/npmawesome-logo-512x512.png" class="hide-on-mobile" width="150" align="right"/></p>
<h2 id="articles">Articles</h2>
<ul>
<li><a href="https://developer.apple.com/library/prerelease/mac/releasenotes/InterapplicationCommunication/RN-JavaScriptForAutomation/index.html#//apple_ref/doc/uid/TP40014508">This article describes JavaScript for Automation, a new feature in OS X 10.10</a></li>
<li><a href="http://blog.docker.com/2014/06/its-here-docker-1-0/">It’s here: Docker 1.0</a><blockquote>
<p>First, while many organizations have cheerfully ignored our “Do not run in production!” warnings, others have been waiting for a level of product maturity before deploying production workloads.  This release’s “1.0” label signifies a level of quality, feature completeness, backward compatibility and API stability to meet enterprise IT standards.</p>
</blockquote>
</li>
<li><a href="http://meteortips.com/leaderboard-example-tutorial/">How To Make the Leaderboard Example App in Meteor</a><blockquote>
<p>In the coming weeks and months, I’ll be publishing tutorials on how to build all four of these applications from scratch. I’ll be simplifying the code in some places, making it more friendly to beginners, but they’ll be practically identical in terms of features.</p>
</blockquote>
</li>
<li><a href="http://gmarty.github.io/jsconf-2014-talk-play-dvd-in-js">Playing DVD in JavaScript</a></li>
<li><a href="http://www.2ality.com/2014/05/current-script.html">Identifying the current script element</a></li>
<li><a href="https://medium.com/architecting-a-life/fee8f3ee97a0">Finding the unjustly homeless, and teaching them to code</a><blockquote>
<p>The idea is simple. Without disrespecting him, I will offer two options:</p>
<ol>
<li>I will come back tomorrow and give you $100 in cash.</li>
<li>I will come back tomorrow and give you three JavaScript books, (beginner-advanced-expert) and a super cheap basic laptop. I will then come an hour early from work each day—when he feels prepared—and teach him to code.</li>
</ol>
</blockquote>
</li>
<li><a href="http://code.tutsplus.com/tutorials/real-time-chat-with-nodejs-readline-socketio--cms-20953">Real-Time Chat With Node.js&#39; Readline &amp; Socket.io</a><blockquote>
<p>Node.js has an under-appreciated module in its standard library that is surprisingly useful. The Readline module does what it says on the box: it reads a line of input from the terminal.</p>
</blockquote>
</li>
</ul>
<div class="read-more"></div>

<h2 id="github">Github</h2>
<ul>
<li><a href="https://github.com/snookca/CoffeeConsole">CoffeeConsole</a> is a Chrome Extension for running CoffeeScript from the Web Inspector.</li>
</ul>
<h2 id="twitter">Twitter</h2>
<blockquote class="twitter-tweet" data-partner="tweetdeck"><p>Introducing the new <a href="http://t.co/JK8ZTaMria">http://t.co/JK8ZTaMria</a> &lt;3 <a href="http://t.co/tPJOHsGYgj">pic.twitter.com/tPJOHsGYgj</a></p>&mdash; Yeoman (@yeoman) <a href="https://twitter.com/yeoman/statuses/477493274509602816">June 13, 2014</a></blockquote>

<h2 id="misc">Misc</h2>
<ul>
<li><a href="http://www.thisiscolossal.com/2014/06/a-retired-boeing-727-converted-into-a-home-in-the-woods/">A Retired Boeing 727 Converted Into a Home in the Woods</a><blockquote>
<p><img src="http://www.thisiscolossal.com/wp-content/uploads/2014/06/retired-boeing-727-recycled-home-bruce-campbell-1.jpg" alt=""></p>
</blockquote>
</li>
</ul>
]]></description>
      </item>
    
      
      
      
      <item>
        <title><![CDATA[JugglingDB]]></title>
        <link><![CDATA[http://npmawesome.com/posts/2014-06-16-jugglingdb]]></link>
        <dc:creator><![CDATA[Alex Gorbatchev]]></dc:creator>
        <guid isPermaLink="true"><![CDATA[http://npmawesome.com/posts/2014-06-16-jugglingdb]]></guid>
        <pubDate><![CDATA[Mon, 16 Jun 2014 16:00:00 GMT]]></pubDate>
        <description><![CDATA[<p>Data access is something Node.js is very well known for. When it comes to drivers, there&#39;s support for nearly every database under the sun. These days however, in most cases you use an <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a> library instead of a plain driver. It saves you time and you don&#39;t have to write every single thing youself.</p>
<p>There are database specific <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a> libraries such as <a href="http://mongoosejs.com/">Mongoose</a> for MongoDB and <a href="http://sequelizejs.com/">Sequelize</a> for MySQL and PostgreSQL. The downside to this approach is that you have to learn a whole new API when you have to go from one database to another. I&#39;m not suggesting it&#39;s a good idea to switch or use different databases during a lifecycle of a single project (eg SQLite for development and MySQL for production). But going from project to project, client to client, your requirements might change and you will have to use a different database and then learn a whole new API. Fun? Yes! But if you have to delivery features quickly, this might be a setback.</p>
<div class="read-more"></div>

<p><img src="http://npmawesome.com/images/posts/anatoliy_chakkaev.jpg" width="100" align="right"/>
<a href="http://browsenpm.org/package/jugglingdb">JugglingDB</a> (Github: <a href="https://github.com/1602/jugglingdb">1602/jugglingdb</a>, License: MIT) by <a href="https://github.com/1602">Anatoliy Chakkaev</a> is a young <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a> library that tries to provide a single API for a vast array of databases. All adapters come in a form of separate modules and there are quite a few already available:</p>
<ul>
<li>ArangoDB</li>
<li>CouchDB</li>
<li>Firebird</li>
<li>MongoDB</li>
<li>MySQL</li>
<li>PostgreSQL</li>
<li>Redis</li>
<li>RethinkDB</li>
<li>SQLite</li>
</ul>
<p>Lets check it out!</p>
<pre><code>npm install jugglingdb
</code></pre><h2 id="usage">Usage</h2>
<pre><code>var Schema = require(&#39;jugglingdb&#39;).Schema;
var schema = new Schema(&#39;redis&#39;, {port: 6379});

var Post = schema.define(&#39;Post&#39;, {
  title: { type: String, length: 255 },
  content: { type: Schema.Text },
  date: { type: Date, default: function () { return new Date; } },
  timestamp: { type: Number,  default: Date.now },
  published: { type: Boolean, default: false, index: true }
});

var User = schema.define(&#39;User&#39;, {
  name: String,
  bio: Schema.Text,
  approved: Boolean,
  joinedAt: Date,
  age: Number
});

User.hasMany(Post, { as: &#39;posts&#39;,  foreignKey: &#39;userId&#39; });
Post.belongsTo(User, { as: &#39;author&#39;, foreignKey: &#39;userId&#39; });

var user = new User({ name: &#39;Alex&#39; });

user.save(function (err) {
  var post = user.posts.build({ title: &#39;Hello world&#39; });
  post.save(console.log);
});
</code></pre><p>Here&#39;s the cool part, if you want to use a different database, all you have to do is change how your schema connects:</p>
<pre><code>var schema = new Schema(&#39;mongodb&#39;, {url: &#39;mongodb://localhost/myapp&#39;});
</code></pre><p>What&#39;s even cooler, is that you can have multiple schemas connecting to multiple databases at the same time. This could be very handy if for example you want to keep some cached data in Redis, which storing your loosly defined documents in MongoDB and your accounting stuff in MySQL. You could do all that with a single API.</p>
<h2 id="closing-thoughts">Closing thoughts</h2>
<p><a href="https://github.com/1602/jugglingdb">1602/jugglingdb</a> is not as well known as <a href="http://mongoosejs.com/">Mongoose</a>, but it&#39;s been in development since 2011 and has a pretty strong following on GitHub. <a href="http://jugglingdb.co/">Documentation</a> is pretty extensive and <a href="http://jugglingdb.co/roadmap.3.html">roadmap</a> gives you a glimpse of where the project is headed and what is currently considered missing. Finally, check out <a href="https://github.com/npmawesome/example-jugglingdb">source code</a> for this article on GitHub and an <a href="http://runnable.com/U5SP5uAfzMh7SfoX">interactive example</a> on Runnable. I&#39;ve included MongoDB, Redis and Memory examples.</p>
]]></description>
      </item>
    
      
      
      
      <item>
        <title><![CDATA[Links for June 6, 2014]]></title>
        <link><![CDATA[http://npmawesome.com/posts/2014-06-06-links]]></link>
        <dc:creator><![CDATA[Alex Gorbatchev]]></dc:creator>
        <guid isPermaLink="true"><![CDATA[http://npmawesome.com/posts/2014-06-06-links]]></guid>
        <pubDate><![CDATA[Sat, 07 Jun 2014 00:39:31 GMT]]></pubDate>
        <description><![CDATA[<p><img src="http://npmawesome.com/images/posts/npmawesome-logo-512x512.png" class="hide-on-mobile" width="150" align="right"/></p>
<h2 id="articles">Articles</h2>
<ul>
<li><a href="https://stripe.com/blog/open-source-retreat-grantees">Stripe Open Source Retreat Grantees</a><blockquote>
<p>We received about 120 applications in total. Since we only had a few slots (we in fact were originally going to do two, but we had so much trouble choosing we ended up creating another slot), there were a large number of really awesome projects we had to turn away.</p>
</blockquote>
</li>
<li><a href="http://www.vox.com/2014/5/29/5758542/time-for-the-US-to-use-the-metric-system">It&#39;s time for the US to use the metric system</a><blockquote>
<p>The United States is the last remaining industrialized nation with no formal commitment to going metric. America&#39;s position is causing unnecessary isolation. It&#39;s an impediment to trade and puts the United States at a disadvantage.</p>
</blockquote>
</li>
<li><a href="https://www.linkedin.com/today/post/article/20140524020851-6170480-how-paypal-and-reddit-faked-their-way-to-traction?_mSplash=1">How Paypal and Reddit faked their way to traction</a><blockquote>
<p>A platform is useless without complementary products. Marketplaces, especially, are dead without sellers posting on them. To solve the chicken-egg problem, some marketplaces create fake supply to attract buyers.</p>
</blockquote>
</li>
<li><a href="http://www.slate.com/articles/technology/technology/2014/06/i_sold_my_startup_for_25_5_million_here_s_how_i_did_it.html">I Sold My Startup for $25.5 Million</a><blockquote>
<p>When I shared the news, the team stared blankly at me, unsure if it was a good thing or a bad thing.</p>
</blockquote>
</li>
</ul>
<div class="read-more"></div>

<h2 id="github">Github</h2>
<ul>
<li><a href="http://wicky.nillia.ms/headroom.js/">Headroom.js</a> is a lightweight, high-performance JS widget (with no dependencies!) that allows you to react to the user&#39;s scroll. The header on this site is a living example, it slides out of view when scrolling down and slides back in when scrolling up.</li>
<li><a href="http://jessepollak.github.io/card/">Card</a> makes your credit card form better in one line of code.</li>
<li><a href="https://github.com/cory/maury">maury</a> is an example of processing and visualizing ship course data from open ICOADS Maury data set.</li>
</ul>
<h2 id="youtube">YouTube</h2>
<ul>
<li><a href="http://www.youtube.com/watch?v=lRyRuQdjAww">Introduction to gulp.js</a></li>
</ul>
<h2 id="twitter">Twitter</h2>
<blockquote class="twitter-tweet" data-partner="tweetdeck"><p>In May, <a href="https://twitter.com/tjholowaychuk">@tjholowaychuk</a> was fully or partially responsible for 32MM downloads, or about 10% of all downloads in May: <a href="http://t.co/AlxA8XVGNN">http://t.co/AlxA8XVGNN</a></p>&mdash; Laurie Voss (@seldo) <a href="https://twitter.com/seldo/statuses/474678710390751232">June 5, 2014</a></blockquote>]]></description>
      </item>
    
      
      
      
      <item>
        <title><![CDATA[Links for May 29, 2014]]></title>
        <link><![CDATA[http://npmawesome.com/posts/2014-05-29-links]]></link>
        <dc:creator><![CDATA[Alex Gorbatchev]]></dc:creator>
        <guid isPermaLink="true"><![CDATA[http://npmawesome.com/posts/2014-05-29-links]]></guid>
        <pubDate><![CDATA[Thu, 29 May 2014 16:50:42 GMT]]></pubDate>
        <description><![CDATA[<p><img src="http://npmawesome.com/images/posts/npmawesome-logo-512x512.png" class="hide-on-mobile" width="150" align="right"/></p>
<h2 id="articles">Articles</h2>
<ul>
<li><a href="http://socket.io/blog/introducing-socket-io-1-0/">Introducing Socket.IO 1.0</a><blockquote>
<p>The first version of Socket.IO was created shortly after Node.JS made its first appearance. I had been looking for a framework that easily enabled me to push data from a server to a client for a long time, and even had tried other approaches to server-side JavaScript.</p>
</blockquote>
</li>
<li><a href="http://googlewebmastercentral.blogspot.ca/2014/05/understanding-web-pages-better.html">Understanding web pages better</a><blockquote>
<p>… we decided to try to understand pages by executing JavaScript. It’s hard to do that at the scale of the current web, but we decided that it’s worth it. We have been gradually improving how we do this for some time. In the past few months, our indexing system has been rendering a substantial number of web pages more like an average user’s browser with JavaScript turned on.</p>
</blockquote>
</li>
<li><a href="http://browsenpm.org/package/browserify-handbook">browserify-handbook</a> (Github: <a href="https://github.com/substack/browserify-handbook">substack/browserify-handbook</a>, License: cc-by-3.0) is a great resource for beginners and pros on organizing node apps and modules. Very good read.</li>
<li><a href="http://davidwalsh.name/device-state-detection-css-media-queries-javascript">Device State Detection with CSS Media Queries and JavaScript</a><blockquote>
<p>Being able to detect device state at any given moment is important for any number of reasons and so it&#39;s important that web app CSS and JavaScript are in sync with each other.</p>
</blockquote>
</li>
<li><a href="http://hueniversedotcom.files.wordpress.com/2013/01/hapi-hapi-joi-joi.pdf">hapi hapi joi joi</a> - fantastic slides!</li>
<li><a href="http://bocoup.com/weblog/javascript-relay-with-johnny-five/">Relay Control with Johnny-Five on Node.js</a><blockquote>
<p>DO NOT TOUCH ANY PART OF THE RELAY WHILE IT&#39;S PLUGGED INTO THE WALL.</p>
</blockquote>
</li>
<li><a href="http://jdmaturen.github.io/2013/how-much-is-your-startup-stock-worth.html">How much is your startup stock worth?</a><blockquote>
<p>You can’t get rich on salary.</p>
</blockquote>
</li>
</ul>
<div class="read-more"></div>

<h2 id="github">Github</h2>
<ul>
<li><a href="http://www.objectplayground.com/">Object Playground</a> is a tool for visualizing and experimenting with JavaScript object relationships.</li>
<li><a href="https://code.google.com/p/pdfium/">PDFium</a> is an open-source PDF rendering engine that is used in Google Chrome.</li>
<li><a href="http://www.vittoriozaccaria.net/dyn-css/">DynCSS</a> - simple, dynamic CSS rules to give life to your sites.</li>
</ul>
<h2 id="twitter">Twitter</h2>
<blockquote class="twitter-tweet" data-partner="tweetdeck"><p>This is an amazing <a href="https://twitter.com/StackOverflow">@Stackoverflow</a> answer about Angular (and using jQuery) <a href="http://t.co/pXoyf0zuN6">http://t.co/pXoyf0zuN6</a></p>&mdash; Sara Chipps (@SaraJChipps) <a href="https://twitter.com/SaraJChipps/statuses/468769556765614080">May 20, 2014</a></blockquote>

<h2 id="misc">Misc</h2>
<ul>
<li><a href="http://seanfphotography.blogspot.ca/2014/05/afrikaburm-trickster-2014.html?spref=tw">AfrikaBurm - Trickster - 2014 photos</a> - some great photos from the AfrikaBurm festival.</li>
<li><a href="http://openfontlibrary.org/en/font/fantasque-sans-mono">Fantasque Sans Mono</a><blockquote>
<p>A programming font, designed with functionality in mind, and with some wibbly-wobbly handwriting-like fuzziness that makes it unassumingly cool.</p>
</blockquote>
</li>
</ul>
]]></description>
      </item>
    
      
      
      
      <item>
        <title><![CDATA[joi]]></title>
        <link><![CDATA[http://npmawesome.com/posts/2014-05-23-joi]]></link>
        <dc:creator><![CDATA[Alex Gorbatchev]]></dc:creator>
        <guid isPermaLink="true"><![CDATA[http://npmawesome.com/posts/2014-05-23-joi]]></guid>
        <pubDate><![CDATA[Fri, 23 May 2014 19:41:03 GMT]]></pubDate>
        <description><![CDATA[<p><img src="https://camo.githubusercontent.com/9dd0f88c6cdb8b7c034ac5e5cce0e4bbdc8de19e/68747470733a2f2f7261772e6769746875622e636f6d2f7370756d6b6f2f6a6f692f6d61737465722f696d616765732f6a6f692e706e67" width="100" align="right"/>
Object validation is a tricky thing. It sounds pretty simple when you first think about it, yet there are a ton of libraries that try to do it. Why is that? I feel like there are just alot of way to approach the subject. <a href="http://browsenpm.org/package/joi">Joi</a> (Github: <a href="https://github.com/spumko/joi">spumko/joi</a>, License: BSD 4-Clause) is a schema validation library that came out of the <a href="http://www.walmartlabs.com/">Walmart Labs</a> efforts and more specifically power validation in the <a href="http://spumko.github.io/">hapi</a> server framework.</p>
<p>Lets check it out!</p>
<div class="read-more"></div>

<pre><code>npm install joi
</code></pre><h2 id="usage">Usage</h2>
<p><a href="http://browsenpm.org/package/joi">Joi</a> works by defining a schema. You can validate a single string or number:</p>
<pre><code>var Joi = require(&#39;joi&#39;);

// will fail
Joi.string().validate(10, console.log);

// also will fail
Joi.string().email().validate(&#39;hello+gmail.com&#39;, console.log);

// will pass
Joi.string().email().validate(&#39;hello+world@gmail.com&#39;, console.log);
</code></pre><p>You can validate a basic plain schema</p>
<pre><code>var schema = {counter: Joi.number().min(1).max(10).required()};

// will fail
Joi.validate({counter: 0}, schema, console.log);

// will pass
Joi.validate({counter: 5}, schema, console.log);
</code></pre><p>Finally, you can do a some pretty complicated validation with fields depending on each other:</p>
<pre><code>var schema = Joi.object().keys({
    username: Joi.string().alphanum().min(3).max(30).required(),
    password: Joi.string().regex(/[a-zA-Z0-9]{3,30}/),
    confirmation: Joi.ref(&#39;password&#39;)
  })
  .with(&#39;password&#39;, &#39;confirmation&#39;);

// will fail because `foo` isn&#39;t in the schema at all
Joi.validate({foo: 1}, schema, console.log);

// will fail because `confirmation` is missing
Joi.validate({username: &#39;alex&#39;, password: &#39;qwerty&#39;}, schema, console.log);

// will pass
Joi.validate({
  username: &#39;alex&#39;, password: &#39;qwerty&#39;, confirmation: &#39;qwerty&#39;
}, schema, console.log);
</code></pre><h2 id="closing-thoughts">Closing thoughts</h2>
<p>Here are some other modules you might want to evaluate:</p>
<ul>
<li>is a string validation and sanitization module by <a href="https://github.com/chriso">Chris O&#39;Hara</a>.</li>
<li><a href="http://www.finitio.io/">finito</a> is a language for capturing information structure by <a href="https://github.com/llambeau">Louis Lambeau</a>.</li>
<li>is a module to sanitize and validate objects by <a href="https://github.com/Atinux">Sébastien Chopin</a> (<a href="http://npmawesome.com/posts/2014-01-24-schema-inspector/">previously featured on npmawesome.com</a>).</li>
</ul>
<p>Finally, check out <a href="https://github.com/npmawesome/example-joi">source code</a> for this article on GitHub and an <a href="http://runnable.com/U31mW3RA_pBu7oN-/schema-validation-with-joi-for-node-js-npmawesome-and-nodejitsu">interative example</a> on Runnable.</p>
]]></description>
      </item>
    
  </channel>
</rss>