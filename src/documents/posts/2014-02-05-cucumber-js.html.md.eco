---
layout: post
date: 2014-02-05T13:06:18-0800
tags: npm, testing

npm:
  repo: &repo cucumber/cucumber-js
  name: &name cucumber.js
  install: cucumber

  author:
    name: Julien Biezemans
    github: jbpros

slug: *name
title: *name
description: cucumber.js is a port of the famous Ruby Cucumber testing framework that lets software development teams describe how software should behave in plain text.
---
<img class="hide-on-mobile" src="<%- @image '/cucumber-logo.png' %>" style="width: 100%; margin-bottom: 1em"/>

<img class="hide-on-mobile" src="https://2.gravatar.com/avatar/cbc1acceddbfaceee4cf3cae24d7c912" style="float: right; margin-left: 1em"/>
[cucumber][browsenpm] (Github: [cucumber/cucumber-js][github], License: MIT) is a port of the famous Ruby [Cucumber testing framework](http://cukes.info/) by <%- @author() %> that lets software development teams describe how software should behave in plain text. The text is written in a business-readable domain-specific language and serves as documentation, automated tests and development-aid - all rolled into one format.

    <%- @install() %>

## Features

<%- @browsenpm() %> implements most of the Ruby counterpart's feature for feature and has baked in support for CoffeeScript.

## Usage

Features are written with the [cucumber][browsenpm] (Github: [cucumber/cucumber][github], License: MIT)

    # features/myFeature.feature

    Feature: Example feature
      As a user of cucumber.js
      I want to have documentation on cucumber
      So that I can concentrate on building awesome applications

      Scenario: Reading documentation
        Given I am on the Cucumber.js GitHub repository
        When I go to the README file
        Then I should see "Usage" as the page title

Then

    @Then "I should see \"$title\" as the page title", (title, callback) ->
      # the above string is converted to the following Regexp by Cucumber:
      # /^I should see "([^"]*)" as the page title$/
      pageTitle = @browser.text("title")

      if title is pageTitle
        callback()
      else
        callback.fail new Error("Expected to be on page with title " + title)

or in JavaScript

    this.Then('I should see "$title" as the page title', function(title, callback) {
      // the above string is converted to the following Regexp by Cucumber:
      // /^I should see "([^"]*)" as the page title$/

      var pageTitle = this.browser.text('title');
      if (title === pageTitle) {
        callback();
      } else {
        callback.fail(new Error("Expected to be on page with title " + title));
      }
    });

<img class="hide-on-mobile" src="<%- @image '/cucumber-meme.jpg' %>" style="float: right; margin-left: 1em"/>
Writing [Cucumber scenarios](https://github.com/cucumber/cucumber/wiki/Feature-Introduction) is pretty straight forward and is very addictive. I currently use [Mocha](http://visionmedia.github.io/mocha/) and write `describe` and `it` blocks in nearly the same fasion so that they read as a cohesive story. Perhaps I should just use <%- @browsenpm() %> instead?

[The pipe dream](http://www.martinfowler.com/bliki/BusinessReadableDSL.html) is to be let business people to write software rules without involving programmers. I'm on the fence if it's a good idea, or even if it's possible, but I used to write Cucumber tests back in my Ruby days and loved it!

Check out this [awesome write up](http://flippinawesome.org/2014/01/27/bdd-in-javascript-with-cucumberjs/) on <%- @browsenpm() %>. So, what do you think? Is Cucumber a good idea?

[browsenpm]: http://browsenpm.org/package/cucumber
[github]: https://github.com/cucumber/cucumber-js