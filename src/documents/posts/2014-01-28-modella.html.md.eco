---
layout: post
date: 2014-01-28T09:56:33-0800
tags: npm, orm

npm:
  repo: &repo modella/modella
  name: &name modella

  author:
    name: Matthew Mueller
    github: matthewmueller

slug: *name
title: *name
description: Modella is a bare bones model. It exposes a few APIs on which plugins can be built to enhance functionality.
---
<img class="hide-on-mobile" src="https://2.gravatar.com/avatar/824b41e6108a22c4c96f50ee23419369" style="float: right; margin-left: 1em"/>

<%- @npm() %> is a bare bones model framework written by <%- @author() %> of the [cheerio](/posts/2013-12-27-cheerio/) fame. It exposes a few APIs on which plugins can be built to enhance functionality. The core module and select plugins work on the client and server.

    <%- @install() %>

## Plugins

Most of functionality comes bundles as plugins:

* Adapter (Sync Layer) Plugins
  - [modella-ajax][browsenpm] (Github: [modella/modella-ajax][github], License: MIT) - RESTful AJAX HTTP adapter.
  - [ejdb](https://github.com/modella/ejdb) - Ejdb database adapter.
  - [leveldb](https://github.com/modella/leveldb) - LevelDB adapter.
  - [mongo](https://github.com/modella/mongo) - MongoDB adapter.
  - [modella-mysql](https://github.com/alexmingoia/modella-mysql) - MySQL adapter.
  - [modella-memory](https://github.com/alexmingoia/modella-memory) - In-memory adapter.

* Attribute Utilities
  - [validators](https://github.com/modella/validators) - Validations for attributes
  - [slug](https://github.com/modella/slug) - Slug generation on attributes
  - [modella-level-relations](https://github.com/ramitos/modella-level-relations) - LevelUP based modella relations

* Security Plugins
  - [auth](https://github.com/modella/auth) - Authorization plugin.
  - [filter](https://github.com/modella/filter) - Filter sensitive fields from a JSON blob.
  - [protection](https://github.com/modella/protection) - Mass-assignment protection.

* Misc
  - [modella-resource](https://github.com/alexmingoia/modella-resource) - Expose <%- @npm() %> models via RESTful resource middleware (for use with Express).
  - [friendly-errors](https://github.com/modella/friendly-errors) - add friendly error messages to attributes.
  - [save-invalid](https://github.com/modella/save-invalid) - Save invalid models and mark them as dirty in the database.

## Usage

    var modella = require('modella');
    var validators = require('modella-validators');
    var mongo = require('modella-mongo')('localhost/db')
    var User = modella('User');

    User.use(validators);
    User.use(mongo);

    User
      .attr('_id')
      .attr('username', { required: true })
      .attr('email', { required: true, format: 'email' });

    User.index('email', { unique : true });

    var user = new User({ name: 'Charley' });

    user.save(function(err) {
      User.find(user._id, function(err, u) {
        console.log(u.username());
      });
    });

If you feel disgrundled with Mongoose or just tired of using the raw driver, give <%- @npm() %> a try!

[browsenpm]: http://browsenpm.org/package/modella-ajax
[github]: https://github.com/modella/modella-ajax