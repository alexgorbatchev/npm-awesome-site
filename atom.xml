<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>npm awesome</title>
	<subtitle>Daily dose of awesome NPM modules for Node.js, old and new!</subtitle>
	<link href="http://npmawesome.com/atom.xml" rel="self" />
	<link href="http://npmawesome.com" />
	<id>http://npmawesome.com</id>
	<updated>2014-05-22T17:27:04.977Z</updated>
	<author>
		<name>Alex Gorbatchev</name>
	</author>

  
  
  
    
    
    
		<entry>
			<title>Links for May 22, 2014</title>
			<link href="http://npmawesome.com/posts/2014-05-22-links"/>
			<updated>2014-05-22T17:26:40.000Z</updated>
			<id>http://npmawesome.com/posts/2014-05-22-links</id>
			<content type="html">&lt;p&gt;&lt;img src=&quot;http://npmawesome.com/images/posts/html5.png&quot; class=&quot;hide-on-mobile&quot; style=&quot;float: right; width: 150px;&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;articles&quot;&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://davidwalsh.name/add-rules-stylesheets&quot;&gt;Add Rules to Stylesheets with JavaScript&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;Another way we can make our pages efficient and fast is to dynamically add and remove styles directly to a stylesheet instead of constantly querying the DOM for elements and applying styles.  Here&amp;#39;s how it works!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://antirez.com/news/75&quot;&gt;Redis new data structure: the HyperLogLog&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;There is a class of algorithms that use randomization in order to provide an approximation of the number of unique elements in a set using just a constant, and small, amount of memory. The best of such algorithms currently known is called HyperLogLog, and is due to Philippe Flajolet.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.igvita.com/2014/05/20/script-injected-async-scripts-considered-harmful/&quot;&gt;Script-injected &amp;quot;async scripts&amp;quot; considered harmful&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;The script-injected pattern offers no benefits over &lt;code&gt;&amp;lt;script async&amp;gt;&lt;/code&gt;. The reason it exists is because &lt;code&gt;&amp;lt;script async&amp;gt;&lt;/code&gt; was not available and preload scanners did not exist back when it was first introduced. However, that era has now passed, and we need to update our best practices to use async attribute instead of script-injected scripts. In short, script-injected &amp;quot;async scripts&amp;quot; considered harmful.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.html5rocks.com/en/tutorials/es7/observe/&quot;&gt;Data-binding Revolutions with Object.observe()&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;A revolution is coming. There’s a new addition to JavaScript that’s going to change everything you think you know about data-binding. It’s also going to change how many of your MVC libraries approach observing models for edits and updates.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;read-more&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;github&quot;&gt;Github&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://philipwalton.github.io/solved-by-flexbox/&quot;&gt;Solved by Flexbox&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;This site is not another CSS framework. Instead, its purpose is to showcase problems once hard or impossible to solve with CSS alone, now made trivially easy with Flexbox. And with the recent release of Internet Explorer 11 and Safari 6.1, the latest Flexbox spec is now supported in every modern browser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;twitter&quot;&gt;Twitter&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-partner=&quot;tweetdeck&quot;&gt;&lt;p&gt;Dawg, RT &lt;a href=&quot;https://twitter.com/ItsKieranTime&quot;&gt;@ItsKieranTime&lt;/a&gt; I&amp;#39;ve found it; the most confusing image on the internet. &lt;a href=&quot;https://twitter.com/search?q=%23KieranPresentsTheInternet&amp;amp;src=hash&quot;&gt;#KieranPresentsTheInternet&lt;/a&gt; &lt;a href=&quot;http://t.co/OUysIaxEfX&quot;&gt;pic.twitter.com/OUysIaxEfX&lt;/a&gt;&lt;/p&gt;&amp;mdash; Gingerick Lamar (@odiolasgalletas) &lt;a href=&quot;https://twitter.com/odiolasgalletas/statuses/466103422454730752&quot;&gt;May 13, 2014&lt;/a&gt;&lt;/blockquote&gt;</content>
		</entry>
	
    
    
    
		<entry>
			<title>Links for May 20, 2014</title>
			<link href="http://npmawesome.com/posts/2014-05-20-links"/>
			<updated>2014-05-20T19:22:40.000Z</updated>
			<id>http://npmawesome.com/posts/2014-05-20-links</id>
			<content type="html">&lt;p&gt;&lt;img src=&quot;http://npmawesome.com/images/posts/html5.png&quot; class=&quot;hide-on-mobile&quot; style=&quot;float: right; width: 150px;&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;articles&quot;&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://viget.com/extend/gulp-browserify-starter-faq&quot;&gt;Gulp + Browserify: The Everything Post&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;When I was done flipping tables, I set aside my newly acquired Grunt + RequireJS skills, and started over again with Gulp and Browserify to see what all the fuss was about.&lt;/p&gt;
&lt;p&gt;You guys. The internet was right. To save you some googling, doc crawling, and trial and error I went through, I&amp;#39;ve assembled some resources and information I think you&amp;#39;ll find helpful in getting started.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://flippinawesome.org/2014/05/12/roll-your-own-asset-pipeline-with-gulp/&quot;&gt;Roll Your Own Asset Pipeline with Gulp&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;Gulp is a build system. It’s like Grunt, Make, Rake, and the like. It’s easy to use for the person running it. While it does have a slight learning curve, you’ll find it a super useful tool for all kinds of tasks. It’ll be the fastest weapon in your toolbox for asset compilation (both in terms of time to develop and run time).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://thenextweb.com/google/2014/05/20/chrome-35-launches-developer-control-touch-input-new-apis-javascript-features/&quot;&gt;Chrome 35 launches with more developer control&lt;/a&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;More developer control over touch input.&lt;/li&gt;
&lt;li&gt;New JavaScript features.&lt;/li&gt;
&lt;li&gt;Unprefixed Shadow DOM.&lt;/li&gt;
&lt;li&gt;A number of new apps/extension APIs.&lt;/li&gt;
&lt;li&gt;Lots of under the hood changes for stability and performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;read-more&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;twitter&quot;&gt;Twitter&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-partner=&quot;tweetdeck&quot;&gt;&lt;p&gt;DevTools Tip: Select a User Agent from a predefined list, or define an arbitrary one. Gif: &lt;a href=&quot;https://t.co/M5QMInl7Fq&quot;&gt;https://t.co/M5QMInl7Fq&lt;/a&gt; &lt;a href=&quot;http://t.co/9XUDDBXwoO&quot;&gt;pic.twitter.com/9XUDDBXwoO&lt;/a&gt;&lt;/p&gt;&amp;mdash; Umar Hansa (@umaar) &lt;a href=&quot;https://twitter.com/umaar/statuses/468823671923306497&quot;&gt;May 20, 2014&lt;/a&gt;&lt;/blockquote&gt;


&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Miss the &lt;a href=&quot;https://twitter.com/search?q=%23live&amp;amp;src=hash&quot;&gt;#live&lt;/a&gt; demo at &lt;a href=&quot;https://twitter.com/search?q=%23Bitcoin2014&amp;amp;src=hash&quot;&gt;#Bitcoin2014&lt;/a&gt;? Not to worry! &lt;a href=&quot;https://twitter.com/jerallaire&quot;&gt;@jerallaire&lt;/a&gt; walks you through Circle in this &lt;a href=&quot;https://twitter.com/search?q=%23video&amp;amp;src=hash&quot;&gt;#video&lt;/a&gt;: &lt;a href=&quot;http://t.co/hPpRcZ5fy9&quot;&gt;http://t.co/hPpRcZ5fy9&lt;/a&gt; &lt;a href=&quot;https://twitter.com/search?q=%23bitcoin&amp;amp;src=hash&quot;&gt;#bitcoin&lt;/a&gt;&lt;/p&gt;&amp;mdash; Circle Inc. (@circlebits) &lt;a href=&quot;https://twitter.com/circlebits/statuses/467325134706343936&quot;&gt;May 16, 2014&lt;/a&gt;&lt;/blockquote&gt;</content>
		</entry>
	
    
    
    
    
    
		<entry>
			<title>longjohn</title>
			<link href="http://npmawesome.com/posts/2014-05-16-longjohn"/>
			<updated>2014-05-20T04:11:55.000Z</updated>
			<id>http://npmawesome.com/posts/2014-05-16-longjohn</id>
			<content type="html">&lt;p&gt;You know that feeling of disapointment when you get an error and the stack trace just abruptly ends and you know for a fact it should be much longer, and much more useful than that?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Error: Error message
    at null._onTimeout (/examples/error-module.js:7:29)
    at Timer.listOnTimeout [as ontimeout] (timers.js:110:15)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I&amp;#39;m very well familiar with that feeling... Maybe too much? Turns out there&amp;#39;s a way to get much better results in Node with a little bit of magic. Said magic is a module called &lt;a href=&quot;https://github.com/mattinsler/longjohn&quot;&gt;longjohn&lt;/a&gt; by &lt;a href=&quot;https://github.com/mattinsler&quot;&gt;Matt Insler&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;read-more&quot;&gt;&lt;/div&gt;

&lt;pre&gt;&lt;code&gt;npm install longjohn
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;Using &lt;a href=&quot;https://github.com/mattinsler/longjohn&quot;&gt;longjohn&lt;/a&gt; couldn&amp;#39;t get any easier. You just need to &lt;code&gt;require(&amp;#39;longjohn&amp;#39;)&lt;/code&gt; and you are all set. The magic that I mentioned above consists of replacing functions like &lt;code&gt;setTimeout&lt;/code&gt; and &lt;code&gt;nextTick&lt;/code&gt; with patched versions that keep track of the stack as it unfolds and as author suggests, this probably shouldn&amp;#39;t be used in production.&lt;/p&gt;
&lt;p&gt;But, after you require &lt;a href=&quot;https://github.com/mattinsler/longjohn&quot;&gt;longjohn&lt;/a&gt;, your short, mildly helpful stack like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Error: Error message
    at null._onTimeout (/examples/error-module.js:7:29)
    at Timer.listOnTimeout [as ontimeout] (timers.js:110:15)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Turns into this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Error: Error message
    at [object Object].&amp;lt;anonymous&amp;gt; (/examples/error-module.js:7:29)
    at listOnTimeout (timers.js:110:15)
---------------------------------------------
    at delayed (/examples/error-module.js:3:3)
    at delayedError (/examples/error-module.js:7:3)
    at [object Object].&amp;lt;anonymous&amp;gt; (/examples/error-module.js:21:5)
    at listOnTimeout (timers.js:110:15)
---------------------------------------------
    at delayed (/examples/error-module.js:3:3)
    at module.exports (/examples/error-module.js:20:3)
    at Object.&amp;lt;anonymous&amp;gt; (/examples/longjohn.js:2:26)
    at Module._compile (module.js:456:26)
    at Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)
    at Module._load (module.js:312:12)
    at Module.runMain (module.js:497:10)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;closing-thoughts&quot;&gt;Closing thoughts&lt;/h2&gt;
&lt;p&gt;Getting a full stack is imperative to finding out the root cause of the problem in your code. &lt;a href=&quot;https://github.com/mattinsler/longjohn&quot;&gt;longjohn&lt;/a&gt; addresses that on the Node side. There&amp;#39;s a similiar module that works in the browser called &lt;a href=&quot;https://github.com/btford/zone.js/&quot;&gt;zone.js&lt;/a&gt; by &lt;a href=&quot;https://github.com/btford&quot;&gt;Brian Ford&lt;/a&gt; that I think you should check out as well.&lt;/p&gt;
&lt;p&gt;Check out &lt;a href=&quot;https://github.com/npmawesome/example-longjohn&quot;&gt;example for this article&lt;/a&gt; on GitHub.&lt;/p&gt;
</content>
		</entry>
	
    
    
    
		<entry>
			<title>Links for May 16, 2014</title>
			<link href="http://npmawesome.com/posts/2014-05-16-links"/>
			<updated>2014-05-16T16:56:57.000Z</updated>
			<id>http://npmawesome.com/posts/2014-05-16-links</id>
			<content type="html">&lt;p&gt;&lt;img src=&quot;http://npmawesome.com/images/posts/html5.png&quot; class=&quot;hide-on-mobile&quot; style=&quot;float: right; width: 150px;&quot;/&gt;&lt;/p&gt;
&lt;h2 id=&quot;articles&quot;&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://auth0.com/blog/2014/01/07/angularjs-authentication-with-cookies-vs-token/&quot;&gt;Introducing Firebase Hosting&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;Once upon a time, in the dark ages of the internet, apps dynamically generated HTML server-side every time a page was requested. This was slow, difficult to scale, and required users to connect to distant servers to get their content.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://auth0.com/blog/2014/01/07/angularjs-authentication-with-cookies-vs-token/&quot;&gt;Cookies vs Tokens. Getting auth right with Angular.JS&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;What&amp;#39;s JSON Web Token? JSON Web Token (JWT, pronounced jot) is a relatively new token format used in space-constrained environments such as HTTP Authorization headers.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jpadilla.com/post/73791304724/auth-with-json-web-tokens&quot;&gt;Auth with JSON Web Tokens&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;There’s a relatively new standard called JSON Web Token that happens to be backed by companies like Firebase, Google, Microsoft, and Zendesk. There are already many libraries to handle encoding and decoding of this tokens in the backend.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://watirmelon.com/2014/05/14/100000-e2e-selenium-tests-sounds-like-a-nightmare&quot;&gt;100,000 e2e selenium tests? Sounds like a nightmare!&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;If I had to choose just one, I would definitely choose a comprehensive suite of automated unit tests over a comprehensive suite of end-to-end/system tests any day of the week.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.reinteractive.net/posts/186-lessons-learnt-by-building-single-page-applications&quot;&gt;Lessons learnt by building Single Page Applications&lt;/a&gt;&lt;blockquote&gt;
&lt;p&gt;I want to share some of the lessons I have learnt building them, especially what things I found difficult technically. Based on my experience I think the following are common issues that you may encounter when building them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;read-more&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;github&quot;&gt;Github&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/HubSpot/shepherd&quot;&gt;Shepherd&lt;/a&gt; - guide your users through a tour of your app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;startups&quot;&gt;Startups&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://citymapper.com/nyc/superrouter?&quot;&gt;CityMapper&lt;/a&gt; is a pretty slick city route planner available for a small number of cities.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;youtube&quot;&gt;YouTube&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=PT8s_IVWDgw&quot;&gt;WebTorrent: Bringing BitTorrent to the Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;twitter&quot;&gt;Twitter&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-partner=&quot;tweetdeck&quot;&gt;&lt;p&gt;Time for some traffic problems in São Paulo... &lt;a href=&quot;http://t.co/d29u5ctJBG&quot;&gt;pic.twitter.com/d29u5ctJBG&lt;/a&gt;&lt;/p&gt;&amp;mdash; Patrick Stewart (@SirPatStew) &lt;a href=&quot;https://twitter.com/SirPatStew/statuses/466633514482298880&quot;&gt;May 14, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-partner=&quot;tweetdeck&quot;&gt;&lt;p&gt;Today, we are thrilled to introduce &amp;quot;A New Way to Learn Ionic&amp;quot; &lt;a href=&quot;http://t.co/CceIQ00TVG&quot;&gt;http://t.co/CceIQ00TVG&lt;/a&gt; &lt;a href=&quot;http://t.co/P97znY5gxb&quot;&gt;pic.twitter.com/P97znY5gxb&lt;/a&gt;&lt;/p&gt;&amp;mdash; ionic (@Ionicframework) &lt;a href=&quot;https://twitter.com/Ionicframework/statuses/466643147934941184&quot;&gt;May 14, 2014&lt;/a&gt;&lt;/blockquote&gt;</content>
		</entry>
	
    
    
    
		<entry>
			<title>Links for May 14, 2014</title>
			<link href="http://npmawesome.com/posts/2014-05-14-links"/>
			<updated>2014-05-14T16:45:09.000Z</updated>
			<id>http://npmawesome.com/posts/2014-05-14-links</id>
			<content type="html">&lt;h2 id=&quot;articles&quot;&gt;Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/p/a2010c13d3d5&quot;&gt;Getting gulpy&lt;/a&gt; - advanced tips for using gulp.js&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jlongster.com/Removing-User-Interface-Complexity,-or-Why-React-is-Awesome&quot;&gt;Removing user interface complexity, or why React is awesome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gizmodo.com/someone-finally-designed-a-better-disposable-coffee-cup-1575905762&quot;&gt;Someone Finally Designed a Better Disposable Coffee Cup Lid&lt;/a&gt; &lt;img src=&quot;http://i.kinja-img.com/gawker-media/image/upload/s--E78R8Pma--/gksygb1vboboawlubax0.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.theverge.com/google/2014/5/14/5714602/photos-inside-googles-self-driving-cars&quot;&gt;Behind the wheel: a look inside Google&amp;#39;s self-driving cars&lt;/a&gt; &lt;img src=&quot;http://cdn2.vox-cdn.com/uploads/chorus_image/image/33019187/google-car-theverge-1_1020.0_standard_2040.0.jpg&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;read-more&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;github&quot;&gt;Github&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/sindresorhus/7996717&quot;&gt;git hook to run a command after &lt;code&gt;git pull&lt;/code&gt; if a specified file was changed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ricostacruz.com/nprogress/&quot;&gt;NProgress.js&lt;/a&gt; is a nanoscopic progress bar. Featuring realistic trickle animations to convince your users that something is happening!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;twitter&quot;&gt;Twitter&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-partner=&quot;tweetdeck&quot;&gt;&lt;p&gt;Our 10 year anniversary is coming up! To help us celebrate, &lt;a href=&quot;https://twitter.com/simpleshow&quot;&gt;@simpleshow&lt;/a&gt; made this incredible video for us - &lt;a href=&quot;http://t.co/KFHz5RvQpx&quot;&gt;http://t.co/KFHz5RvQpx&lt;/a&gt;&lt;/p&gt;&amp;mdash; Moz (@Moz) &lt;a href=&quot;https://twitter.com/Moz/statuses/466618559914065921&quot;&gt;May 14, 2014&lt;/a&gt;&lt;/blockquote&gt;</content>
		</entry>
	
</feed>
