<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>npm awesome</title>
	<subtitle>Daily dose of awesome NPM modules for Node.js, old and new!</subtitle>
	<link href="http://npmawesome.com/atom.xml" rel="self" />
	<link href="http://npmawesome.com" />
	<id>http://npmawesome.com</id>
	<updated>2014-04-10T17:15:06.376Z</updated>
	<author>
		<name>Alex Gorbatchev</name>
	</author>

  
  
  
    
    
    
		<entry>
			<title>shmock</title>
			<link href="http://npmawesome.com/posts/2014-04-10-shmock"/>
			<updated>2014-04-10T16:45:06.000Z</updated>
			<id>http://npmawesome.com/posts/2014-04-10-shmock</id>
			<content type="html">&lt;p&gt;&lt;img class=&quot;hide-on-mobile&quot; src=&quot;https://avatars0.githubusercontent.com/u/139687?s=400&quot; style=&quot;float: right; margin-left: 1em; width: 100px&quot;/&gt;
&lt;a href=&quot;https://github.com/xetorthio/shmock&quot;&gt;shmock&lt;/a&gt; is a module by &lt;a href=&quot;https://github.com/xetorthio&quot;&gt;Jonathan Leibiusky&lt;/a&gt; provides a super nice API, like the one of &lt;a href=&quot;https://github.com/visionmedia/superagent&quot;&gt;superagent&lt;/a&gt; but it creates a real http server (using &lt;a href=&quot;https://github.com/visionmedia/express&quot;&gt;express&lt;/a&gt;). The nice thing about this is that you don&amp;#39;t really care about the implementation, which http client is being used, or even if nodes native http api changes.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install shmock
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;var
  shmock = require(&amp;#39;shmock&amp;#39;),
  request = require(&amp;#39;request&amp;#39;),
  assert = require(&amp;#39;assert&amp;#39;)
  ;

var mock = shmock(9000);

mock
  .get(&amp;#39;/foo&amp;#39;)
  .query(&amp;#39;a=1&amp;amp;b=2&amp;#39;)
  .reply(200, &amp;#39;Hello npmawesome.com&amp;#39;)
  ;

request(&amp;quot;http://localhost:9000/foo?b=2&amp;amp;a=1&amp;quot;, function(err, response) {
  assert.equal(response.statusCode, 200);
  assert.equal(response.body, &amp;#39;Hello npmawesome.com&amp;#39;);
  mock.close();

  console.log(&amp;#39;It worked!&amp;#39;);
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Checkout &lt;a href=&quot;http://runnable.com/U0bPQd2Mi8VtE_Vi/shmock-example-for-node-js-and-npmawesome&quot;&gt;runnable example&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;closing-thoughts&quot;&gt;Closing Thoughts&lt;/h2&gt;
&lt;p&gt;Being able to mock APIs is a very powerful tool for &lt;a href=&quot;http://en.wikipedia.org/wiki/Behavior-driven_development&quot;&gt;BDD&lt;/a&gt;. You can prototype, design and test your consumer before implementing a line of code. Check out &lt;a href=&quot;https://github.com/xetorthio/shmock&quot;&gt;shmock&lt;/a&gt; github page for full documentation and test for examples of usage.&lt;/p&gt;
</content>
		</entry>
	
    
    
    
		<entry>
			<title>Links for Apr 8, 2014</title>
			<link href="http://npmawesome.com/posts/2014-04-09-links"/>
			<updated>2014-04-10T03:00:00.000Z</updated>
			<id>http://npmawesome.com/posts/2014-04-09-links</id>
			<content type="html">&lt;h2 id=&quot;articles-slides&quot;&gt;Articles &amp;amp; Slides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://serversforhackers.com/articles/2014/03/20/getting-started-with-docker/&quot;&gt;Getting Started with Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://engineering.gosquared.com/optimising-nginx-node-js-and-networking-for-heavy-workloads&quot;&gt;Optimising NginX, Node.JS and networking for heavy workloads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sokra.github.io/source-map-visualization/&quot;&gt;ource-map-visualization&lt;/a&gt; for various flavors. Pretty cool to see how the mapping works.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mgcrea.github.io/angular-strap/&quot;&gt;angular-strap&lt;/a&gt; - AngularJS 1.2+ native directives for Twitter Bootstrap 3.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://lipis.github.io/flag-icon-css/&quot;&gt;flag-icon-css&lt;/a&gt; - CSS for vector based country flags.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/daraosn/oculus-drone&quot;&gt;oculus-drone&lt;/a&gt; - Oculus Rift + AR Drone 2.0 controller with live video feed and head-motion controller written for Node.js in CoffeeScript.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/schaermu/node-fluent-ffmpeg&quot;&gt;node-fluent-ffmpeg&lt;/a&gt; abstracts the complex command-line usage of ffmpeg into a fluent, easy to use Node.js module.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jasperproject.github.io/&quot;&gt;Jasper&lt;/a&gt; is an open source platform for developing always-on, voice-controlled applications.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;startups&quot;&gt;Startups&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt; brings all your communication together in one place. It’s real-time messaging, archiving and search for modern teams.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zerocater.com/&quot;&gt;ZeroCater&lt;/a&gt; is the easiest way to feed your team.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;vidoes&quot;&gt;Vidoes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://2013.jsconf.eu/speakers/videos.html&quot;&gt;JSConf 2013 conference videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://vimeo.com/ndcoslo/videos/sort:plays/format:thumbnail&quot;&gt;NDC conference videos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL055Epbe6d5bab7rZ3i83OtMmD-d9uq2K&quot;&gt;Fluent 2014 conference videos&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
		</entry>
	
    
    
    
    
    
		<entry>
			<title>Links for Apr 7, 2014</title>
			<link href="http://npmawesome.com/posts/2014-04-07-links"/>
			<updated>2014-04-08T03:00:00.000Z</updated>
			<id>http://npmawesome.com/posts/2014-04-07-links</id>
			<content type="html">&lt;h2 id=&quot;articles-slides&quot;&gt;Articles &amp;amp; Slides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://bjk5.com/post/71887196490/email-transparency-at-khan-academy&quot;&gt;Email transparency at Khan Academy&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Whenever we mention that almost all Khan Academy email is visible to everybody on the team, people always wanna know more... Here’s the how and why of “radical email transparency” at Khan.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.sfgate.com/bayarea/article/S-F-cracks-down-on-Airbnb-rentals-5381237.php&quot;&gt;S.F. cracks down on Airbnb rentals&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As Katz discovered, San Francisco&amp;#39;s ban on short-term rentals is turning out to have teeth. People who rent out space on Airbnb, VRBO and other markets for temporary housing are facing fines by the City Planning Department and eviction on the grounds of illegally operating hotels.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.glintech.com/blog/link-tablet-your-meeting-room-calendar&quot;&gt;Link a tablet to your meeting room calendar&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;They reasoned that by linking our online calendars to a tablet mounted neatly next to the door, it’d be much easier to see, at a glance, whether the room was being used - without poking your head in and possibly interrupting someone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://behindthescenesrecruiter.com/post/82005145232/the-single-most-sure-fire-hiring-desion-you-will-ever&quot;&gt;The Single Most Sure-Fire Hiring Decision You Will Ever Make&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“One good way to snag the great people who are never in the job market is to get them before they even realize there is a job market: when they’re in college.” All the way back in 2006, Joel Spolsky knew that a competitive and rewarding internship program was the best way to acquire top engineering talent. Yet even in 2014, in the midst of a talent crunch, surprisingly few technical companies have internship programs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://brianmcd.com/2014/03/27/a-tip-for-angular-unit-tests-with-promises.html&quot;&gt;A Tip for Angular Unit Tests with Promises&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tl;dr: Don&amp;#39;t put assertions inside promise callbacks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/OpenRA/OpenRA&quot;&gt;Open Red Alert&lt;/a&gt; - I played this game to death when it came out originally. Crazy that somebody&amp;#39;s rewriting it in C# (mono).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ZoneMinder/ZoneMinder&quot;&gt;ZoneMinder&lt;/a&gt; is a free, open source Closed-circuit television software application developed for Linux which supports IP, USB and Analog cameras.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GitbookIO/javascript&quot;&gt;JavaScript GitBook&lt;/a&gt; - teaching programming basics with JavaScript.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gudh.github.io/ihover/dist/index.html&quot;&gt;iHover&lt;/a&gt; is an impressive hover effects collection, powered by pure CSS3, no dependency, work well with Bootstrap 3!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;services&quot;&gt;Services&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://keybase.io&quot;&gt;Keybase&lt;/a&gt; will be a public directory of publicly auditable public keys. All paired, for convenience, with unique usernames.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://asciinema.org/&quot;&gt;ASCIInema&lt;/a&gt; - record and share your terminal sessions, the right way.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;misc&quot;&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://allrecipes.com/recipe/how-to-make-cronuts-part-i/&quot;&gt;How to Make Cronuts&lt;/a&gt; - I&amp;#39;m kind of obsessed with these.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.raspberrypi.org/raspberry-pi-compute-module-new-product/&quot;&gt;Raspberry Pi compute module: new product!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.instructables.com/id/Colorful-Countdown-Clock-for-tight-timeline-manage/&quot;&gt;Colorful Countdown Clock for tight timeline management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;twitter&quot;&gt;Twitter&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/search?q=%23Trello&amp;amp;src=hash&quot;&gt;#Trello&lt;/a&gt; is written in &lt;a href=&quot;https://twitter.com/search?q=%23CoffeeScript&amp;amp;src=hash&quot;&gt;#CoffeeScript&lt;/a&gt;!! Holy Fuck! That&amp;#39;s amazing!!&lt;/p&gt;&amp;mdash; Juan Jose Ramirez U. (@whoisjuan) &lt;a href=&quot;https://twitter.com/whoisjuan/statuses/453308127036047360&quot;&gt;April 7, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;CoffeeScript has “unless”? SOLD&lt;/p&gt;&amp;mdash; David R. Poindexter (@mtheoryx) &lt;a href=&quot;https://twitter.com/mtheoryx/statuses/453260810731548672&quot;&gt;April 7, 2014&lt;/a&gt;&lt;/blockquote&gt;</content>
		</entry>
	
    
    
    
		<entry>
			<title>Links for Apr 5, 2014</title>
			<link href="http://npmawesome.com/posts/2014-04-04-links"/>
			<updated>2014-04-05T03:00:00.000Z</updated>
			<id>http://npmawesome.com/posts/2014-04-04-links</id>
			<content type="html">&lt;h2 id=&quot;apps&quot;&gt;Apps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ghost.org&quot;&gt;Ghost&lt;/a&gt; is an Open Source application which allows you to write and publish your own blog, giving you the tools to make it easy and even fun to do. It&amp;#39;s simple, elegant, and designed so that you can spend less time making your blog work and more time blogging.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;articles-slides&quot;&gt;Articles &amp;amp; Slides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://strongloop.com/strongblog/practical-examples-of-the-new-node-js-streams-api/&quot;&gt;Practical Examples of the New Node.js Streams API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://strongloop.com/strongblog/how-to-compose-node-js-promises-with-q/&quot;&gt;How-to Compose Node.js Promises with Q&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kdzwinel.github.io/JS-OCR-demo/&quot;&gt;JavaScript OCR demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;startups&quot;&gt;Startups&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.shyp.com/&quot;&gt;Shyp&lt;/a&gt; is the easiest way to ship anything.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.spoonrocket.com/&quot;&gt;Spoon Rocket&lt;/a&gt; is the most convinient meal ever.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;misc&quot;&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.codeschool.com/courses#all&quot;&gt;Code School Courses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.kickstarter.com/projects/guardyen/metawear-production-ready-wearables-in-30-minutes&quot;&gt;MetaWear: Production Ready Wearables in 30 Minutes or Less!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;twitter&quot;&gt;Twitter&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;New &lt;a href=&quot;https://twitter.com/search?q=%23npmawesome&amp;amp;src=hash&quot;&gt;#npmawesome&lt;/a&gt; from &lt;a href=&quot;https://twitter.com/alexgorbatchev&quot;&gt;@alexgorbatchev&lt;/a&gt;: &amp;quot;Progress reporting in CLI applications&amp;quot; || &lt;a href=&quot;http://t.co/FymiGMBy3F&quot;&gt;http://t.co/FymiGMBy3F&lt;/a&gt;&lt;/p&gt;&amp;mdash; Nodejitsu (@nodejitsu) &lt;a href=&quot;https://twitter.com/nodejitsu/statuses/452163004638179328&quot;&gt;April 4, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-cards=&quot;hidden&quot;&gt;&lt;p&gt;If you want a super pimped VM with linux kernel upgraded and easy &lt;a href=&quot;https://twitter.com/search?q=%23docker&amp;amp;src=hash&quot;&gt;#docker&lt;/a&gt; install, you are welcome:&amp;#10;&lt;a href=&quot;https://t.co/53GaGshUXs&quot;&gt;https://t.co/53GaGshUXs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Thorsten Lorenz (@thlorenz) &lt;a href=&quot;https://twitter.com/thlorenz/statuses/452149651723264001&quot;&gt;April 4, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;Never thought I&amp;#39;d say this, but CoffeeScript is quite nice&lt;/p&gt;&amp;mdash; David Tang (@skaterdav85) &lt;a href=&quot;https://twitter.com/skaterdav85/statuses/452121943496347648&quot;&gt;April 4, 2014&lt;/a&gt;&lt;/blockquote&gt;</content>
		</entry>
	
    
    
    
		<entry>
			<title>progress</title>
			<link href="http://npmawesome.com/posts/2014-04-04-progress"/>
			<updated>2014-04-04T18:25:57.000Z</updated>
			<id>http://npmawesome.com/posts/2014-04-04-progress</id>
			<content type="html">&lt;p&gt;Lets talk about long running CLI (command line interface) applications. When you have a finite process that is expected to take some time, the best thing to do is to let your users know about it. A typical application that for example downloads a file might look like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var
  request = require(&amp;#39;request&amp;#39;),
  fs = require(&amp;#39;fs&amp;#39;)
  ;

process.stdout.write(&amp;#39;Downloading... &amp;#39;);

request(&amp;#39;http://nodejs.org/dist/node-0.0.1.tar.gz&amp;#39;)
  .pipe(fs.createWriteStream(__dirname + &amp;#39;/node.tar.gz&amp;#39;))
  .on(&amp;#39;close&amp;#39;, function (err) {
    process.stdout.write(&amp;#39;done!\n&amp;#39;);
  });
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The user experience is hardly a great one. It&amp;#39;s clear that something is happening, or at least expected to be happening.&lt;/p&gt;
&lt;div style=&quot;padding: 13px 10px 10px; background: black; text-align: center; border-radius: 3px&quot;&gt;&lt;img src=&quot;http://npmawesome.com/images/posts//progress/progress01.gif&quot;/&gt;&lt;/div&gt;

&lt;p&gt;It&amp;#39;s not really clear if it&amp;#39;s still happening. Is it time for &lt;code&gt;ctrl+c&lt;/code&gt; yet? How about an indicator that something is actually going on?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;process.stdout.write(&amp;#39;Downloading...&amp;#39;);
intervalId = setInterval(function() { process.stdout.write(&amp;#39;.&amp;#39;); }, 1000);

request(&amp;#39;http://nodejs.org/dist/node-0.0.1.tar.gz&amp;#39;)
  .pipe(fs.createWriteStream(__dirname + &amp;#39;/node.tar.gz&amp;#39;))
  .on(&amp;#39;close&amp;#39;, function (err) {
    process.stdout.write(&amp;#39; done!\n&amp;#39;);
    clearInterval(intervalId);
  });
&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;padding: 13px 10px 10px; background: black; text-align: center; border-radius: 3px&quot;&gt;&lt;img src=&quot;http://npmawesome.com/images/posts//progress/progress02.gif&quot;/&gt;&lt;/div&gt;

&lt;p&gt;&lt;img class=&quot;hide-on-mobile&quot; src=&quot;https://avatars2.githubusercontent.com/u/25254&quot; style=&quot;float: right; margin-left: 1em; width: 100px&quot;/&gt;
A little better. But still, there&amp;#39;s no way of telling how long the process will actually take. Lets just do a real progress bar, shall we? This is where &lt;a href=&quot;https://github.com/visionmedia/node-progress&quot;&gt;progress&lt;/a&gt; module that was originally started by &lt;a href=&quot;https://github.com/visionmedia&quot;&gt;TJ Holowaychuk&lt;/a&gt; comes into play! Due to the awesomeness of open source, &lt;a href=&quot;https://github.com/visionmedia/node-progress&quot;&gt;progress&lt;/a&gt; is now pretty much a community effort.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install progress
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/visionmedia/node-progress&quot;&gt;progress&lt;/a&gt; supports a wide range of options via the format string and options. In the end will get a good looking ASCII progress bar and that will let everyone know about the true progress in your CLI application.&lt;/p&gt;
&lt;p&gt;These are the tokens you can use to format your progress bar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:bar&lt;/code&gt; the progress bar itself&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:current&lt;/code&gt; current tick number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:total&lt;/code&gt; total ticks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:elapsed&lt;/code&gt; time elapsed in seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:percent&lt;/code&gt; completion percentage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:eta&lt;/code&gt; estimated completion time in seconds&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;Lets modify our original example and put &lt;a href=&quot;https://github.com/visionmedia/node-progress&quot;&gt;progress&lt;/a&gt; to a good use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var
  request = require(&amp;#39;request&amp;#39;),
  ProgressBar = require(&amp;#39;progress&amp;#39;),
  fs = require(&amp;#39;fs&amp;#39;)
  ;

var
  req = request(&amp;#39;http://nodejs.org/dist/node-0.0.1.tar.gz&amp;#39;),
  bar
  ;

req
  .on(&amp;#39;data&amp;#39;, function (chunk) {
    bar = bar || new ProgressBar(&amp;#39;Downloading... [:bar] :percent :etas&amp;#39;, {
      complete: &amp;#39;=&amp;#39;,
      incomplete: &amp;#39; &amp;#39;,
      width: 25,
      total: parseInt(req.response.headers[&amp;#39;content-length&amp;#39;])
    });

    bar.tick(chunk.length);
  })
  .pipe(fs.createWriteStream(__dirname + &amp;#39;/node.tar.gz&amp;#39;))
  .on(&amp;#39;close&amp;#39;, function (err) {
    bar.tick(bar.total - bar.curr);
  })
  ;
&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;padding: 13px 10px 10px; background: black; text-align: center; border-radius: 3px&quot;&gt;&lt;img src=&quot;http://npmawesome.com/images/posts//progress/progress03.gif&quot;/&gt;&lt;/div&gt;

&lt;p&gt;We even get ETA estimate for free. That&amp;#39;s what I&amp;#39;m talking about!&lt;/p&gt;
&lt;h2 id=&quot;other-modules-to-checkout&quot;&gt;Other modules to checkout&lt;/h2&gt;
&lt;p&gt;Here are a few other modules to check out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jclulow/node-progbar&quot;&gt;progbar&lt;/a&gt; by &lt;a href=&quot;https://github.com/jclulow&quot;&gt;Joshua M. Clulow&lt;/a&gt; is a straight up alternative.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bevry/progressbar&quot;&gt;progressbar&lt;/a&gt; by &lt;a href=&quot;https://github.com/balupton&quot;&gt;Benjamin Arthur Lupton&lt;/a&gt; extends &lt;a href=&quot;https://github.com/visionmedia/node-progress&quot;&gt;progress&lt;/a&gt; with chaining, domains, and steps.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Unitech/node-multimeter&quot;&gt;pm2-multimeter&lt;/a&gt; originally by &lt;a href=&quot;https://github.com/substack&quot;&gt;James Halliday&lt;/a&gt; and now up kept by &lt;a href=&quot;https://github.com/Unitech&quot;&gt;Alexandre Strzelewicz&lt;/a&gt; can display multiple progress bars at the same time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;closing-thoughts&quot;&gt;Closing thoughts&lt;/h2&gt;
&lt;p&gt;It&amp;#39;s really cool to see a CLI application giving meaningful progress feedback. Please don&amp;#39;t forget about user experience when building tools.&lt;/p&gt;
</content>
		</entry>
	
</feed>
