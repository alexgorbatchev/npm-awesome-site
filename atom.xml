<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>npm awesome</title>
	<subtitle>Daily dose of awesome NPM modules for Node.js, old and new!</subtitle>
	<link href="http://npmawesome.com/atom.xml" rel="self" />
	<link href="http://npmawesome.com" />
	<id>http://npmawesome.com</id>
	<updated>2014-04-09T21:46:54.270Z</updated>
	<author>
		<name>Alex Gorbatchev</name>
		<email></email>
	</author>

  
  
  
    
    
    
    
    
		<entry>
			<title>Links for Apr 7, 2014</title>
			<link href="http://npmawesome.com/posts/2014-04-07-links"/>
			<updated>2014-04-08T03:00:00.000Z</updated>
			<id>http://npmawesome.com/posts/2014-04-07-links</id>
			<content type="html">&lt;h2 id=&quot;articles-slides&quot;&gt;Articles &amp;amp; Slides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://bjk5.com/post/71887196490/email-transparency-at-khan-academy&quot;&gt;Email transparency at Khan Academy&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Whenever we mention that almost all Khan Academy email is visible to everybody on the team, people always wanna know more... Here’s the how and why of “radical email transparency” at Khan.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.sfgate.com/bayarea/article/S-F-cracks-down-on-Airbnb-rentals-5381237.php&quot;&gt;S.F. cracks down on Airbnb rentals&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As Katz discovered, San Francisco&amp;#39;s ban on short-term rentals is turning out to have teeth. People who rent out space on Airbnb, VRBO and other markets for temporary housing are facing fines by the City Planning Department and eviction on the grounds of illegally operating hotels.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.glintech.com/blog/link-tablet-your-meeting-room-calendar&quot;&gt;Link a tablet to your meeting room calendar&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;They reasoned that by linking our online calendars to a tablet mounted neatly next to the door, it’d be much easier to see, at a glance, whether the room was being used - without poking your head in and possibly interrupting someone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://behindthescenesrecruiter.com/post/82005145232/the-single-most-sure-fire-hiring-desion-you-will-ever&quot;&gt;The Single Most Sure-Fire Hiring Decision You Will Ever Make&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“One good way to snag the great people who are never in the job market is to get them before they even realize there is a job market: when they’re in college.” All the way back in 2006, Joel Spolsky knew that a competitive and rewarding internship program was the best way to acquire top engineering talent. Yet even in 2014, in the midst of a talent crunch, surprisingly few technical companies have internship programs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://brianmcd.com/2014/03/27/a-tip-for-angular-unit-tests-with-promises.html&quot;&gt;A Tip for Angular Unit Tests with Promises&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tl;dr: Don&amp;#39;t put assertions inside promise callbacks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/OpenRA/OpenRA&quot;&gt;Open Red Alert&lt;/a&gt; - I played this game to death when it came out originally. Crazy that somebody&amp;#39;s rewriting it in C# (mono).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ZoneMinder/ZoneMinder&quot;&gt;ZoneMinder&lt;/a&gt; is a free, open source Closed-circuit television software application developed for Linux which supports IP, USB and Analog cameras.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GitbookIO/javascript&quot;&gt;JavaScript GitBook&lt;/a&gt; - teaching programming basics with JavaScript.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://gudh.github.io/ihover/dist/index.html&quot;&gt;iHover&lt;/a&gt; is an impressive hover effects collection, powered by pure CSS3, no dependency, work well with Bootstrap 3!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;services&quot;&gt;Services&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://keybase.io&quot;&gt;Keybase&lt;/a&gt; will be a public directory of publicly auditable public keys. All paired, for convenience, with unique usernames.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://asciinema.org/&quot;&gt;ASCIInema&lt;/a&gt; - record and share your terminal sessions, the right way.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;misc&quot;&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://allrecipes.com/recipe/how-to-make-cronuts-part-i/&quot;&gt;How to Make Cronuts&lt;/a&gt; - I&amp;#39;m kind of obsessed with these.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.raspberrypi.org/raspberry-pi-compute-module-new-product/&quot;&gt;Raspberry Pi compute module: new product!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.instructables.com/id/Colorful-Countdown-Clock-for-tight-timeline-manage/&quot;&gt;Colorful Countdown Clock for tight timeline management&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;twitter&quot;&gt;Twitter&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://twitter.com/search?q=%23Trello&amp;amp;src=hash&quot;&gt;#Trello&lt;/a&gt; is written in &lt;a href=&quot;https://twitter.com/search?q=%23CoffeeScript&amp;amp;src=hash&quot;&gt;#CoffeeScript&lt;/a&gt;!! Holy Fuck! That&amp;#39;s amazing!!&lt;/p&gt;&amp;mdash; Juan Jose Ramirez U. (@whoisjuan) &lt;a href=&quot;https://twitter.com/whoisjuan/statuses/453308127036047360&quot;&gt;April 7, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;CoffeeScript has “unless”? SOLD&lt;/p&gt;&amp;mdash; David R. Poindexter (@mtheoryx) &lt;a href=&quot;https://twitter.com/mtheoryx/statuses/453260810731548672&quot;&gt;April 7, 2014&lt;/a&gt;&lt;/blockquote&gt;</content>
		</entry>
	
    
    
    
		<entry>
			<title>Links for Apr 5, 2014</title>
			<link href="http://npmawesome.com/posts/2014-04-04-links"/>
			<updated>2014-04-05T03:00:00.000Z</updated>
			<id>http://npmawesome.com/posts/2014-04-04-links</id>
			<content type="html">&lt;h2 id=&quot;apps&quot;&gt;Apps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ghost.org&quot;&gt;Ghost&lt;/a&gt; is an Open Source application which allows you to write and publish your own blog, giving you the tools to make it easy and even fun to do. It&amp;#39;s simple, elegant, and designed so that you can spend less time making your blog work and more time blogging.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;articles-slides&quot;&gt;Articles &amp;amp; Slides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://strongloop.com/strongblog/practical-examples-of-the-new-node-js-streams-api/&quot;&gt;Practical Examples of the New Node.js Streams API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://strongloop.com/strongblog/how-to-compose-node-js-promises-with-q/&quot;&gt;How-to Compose Node.js Promises with Q&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://kdzwinel.github.io/JS-OCR-demo/&quot;&gt;JavaScript OCR demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;startups&quot;&gt;Startups&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.shyp.com/&quot;&gt;Shyp&lt;/a&gt; is the easiest way to ship anything.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.spoonrocket.com/&quot;&gt;Spoon Rocket&lt;/a&gt; is the most convinient meal ever.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;misc&quot;&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.codeschool.com/courses#all&quot;&gt;Code School Courses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.kickstarter.com/projects/guardyen/metawear-production-ready-wearables-in-30-minutes&quot;&gt;MetaWear: Production Ready Wearables in 30 Minutes or Less!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;twitter&quot;&gt;Twitter&lt;/h2&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;New &lt;a href=&quot;https://twitter.com/search?q=%23npmawesome&amp;amp;src=hash&quot;&gt;#npmawesome&lt;/a&gt; from &lt;a href=&quot;https://twitter.com/alexgorbatchev&quot;&gt;@alexgorbatchev&lt;/a&gt;: &amp;quot;Progress reporting in CLI applications&amp;quot; || &lt;a href=&quot;http://t.co/FymiGMBy3F&quot;&gt;http://t.co/FymiGMBy3F&lt;/a&gt;&lt;/p&gt;&amp;mdash; Nodejitsu (@nodejitsu) &lt;a href=&quot;https://twitter.com/nodejitsu/statuses/452163004638179328&quot;&gt;April 4, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-cards=&quot;hidden&quot;&gt;&lt;p&gt;If you want a super pimped VM with linux kernel upgraded and easy &lt;a href=&quot;https://twitter.com/search?q=%23docker&amp;amp;src=hash&quot;&gt;#docker&lt;/a&gt; install, you are welcome:&amp;#10;&lt;a href=&quot;https://t.co/53GaGshUXs&quot;&gt;https://t.co/53GaGshUXs&lt;/a&gt;&lt;/p&gt;&amp;mdash; Thorsten Lorenz (@thlorenz) &lt;a href=&quot;https://twitter.com/thlorenz/statuses/452149651723264001&quot;&gt;April 4, 2014&lt;/a&gt;&lt;/blockquote&gt;

&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p&gt;Never thought I&amp;#39;d say this, but CoffeeScript is quite nice&lt;/p&gt;&amp;mdash; David Tang (@skaterdav85) &lt;a href=&quot;https://twitter.com/skaterdav85/statuses/452121943496347648&quot;&gt;April 4, 2014&lt;/a&gt;&lt;/blockquote&gt;</content>
		</entry>
	
    
    
    
		<entry>
			<title>progress</title>
			<link href="http://npmawesome.com/posts/2014-04-04-progress"/>
			<updated>2014-04-04T18:25:57.000Z</updated>
			<id>http://npmawesome.com/posts/2014-04-04-progress</id>
			<content type="html">&lt;p&gt;Lets talk about long running CLI (command line interface) applications. When you have a finite process that is expected to take some time, the best thing to do is to let your users know about it. A typical application that for example downloads a file might look like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var
  request = require(&amp;#39;request&amp;#39;),
  fs = require(&amp;#39;fs&amp;#39;)
  ;

process.stdout.write(&amp;#39;Downloading... &amp;#39;);

request(&amp;#39;http://nodejs.org/dist/node-0.0.1.tar.gz&amp;#39;)
  .pipe(fs.createWriteStream(__dirname + &amp;#39;/node.tar.gz&amp;#39;))
  .on(&amp;#39;close&amp;#39;, function (err) {
    process.stdout.write(&amp;#39;done!\n&amp;#39;);
  });
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The user experience is hardly a great one. It&amp;#39;s clear that something is happening, or at least expected to be happening.&lt;/p&gt;
&lt;div style=&quot;padding: 13px 10px 10px; background: black; text-align: center; border-radius: 3px&quot;&gt;&lt;img src=&quot;http://npmawesome.com/images/posts//progress/progress01.gif&quot;/&gt;&lt;/div&gt;

&lt;p&gt;It&amp;#39;s not really clear if it&amp;#39;s still happening. Is it time for &lt;code&gt;ctrl+c&lt;/code&gt; yet? How about an indicator that something is actually going on?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;process.stdout.write(&amp;#39;Downloading...&amp;#39;);
intervalId = setInterval(function() { process.stdout.write(&amp;#39;.&amp;#39;); }, 1000);

request(&amp;#39;http://nodejs.org/dist/node-0.0.1.tar.gz&amp;#39;)
  .pipe(fs.createWriteStream(__dirname + &amp;#39;/node.tar.gz&amp;#39;))
  .on(&amp;#39;close&amp;#39;, function (err) {
    process.stdout.write(&amp;#39; done!\n&amp;#39;);
    clearInterval(intervalId);
  });
&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;padding: 13px 10px 10px; background: black; text-align: center; border-radius: 3px&quot;&gt;&lt;img src=&quot;http://npmawesome.com/images/posts//progress/progress02.gif&quot;/&gt;&lt;/div&gt;

&lt;p&gt;&lt;img class=&quot;hide-on-mobile&quot; src=&quot;https://avatars2.githubusercontent.com/u/25254&quot; style=&quot;float: right; margin-left: 1em; width: 100px&quot;/&gt;
A little better. But still, there&amp;#39;s no way of telling how long the process will actually take. Lets just do a real progress bar, shall we? This is where &lt;a href=&quot;https://github.com/visionmedia/node-progress&quot;&gt;progress&lt;/a&gt; module that was originally started by &lt;a href=&quot;https://github.com/visionmedia&quot;&gt;TJ Holowaychuk&lt;/a&gt; comes into play! Due to the awesomeness of open source, &lt;a href=&quot;https://github.com/visionmedia/node-progress&quot;&gt;progress&lt;/a&gt; is now pretty much a community effort.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install progress
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;features&quot;&gt;Features&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/visionmedia/node-progress&quot;&gt;progress&lt;/a&gt; supports a wide range of options via the format string and options. In the end will get a good looking ASCII progress bar and that will let everyone know about the true progress in your CLI application.&lt;/p&gt;
&lt;p&gt;These are the tokens you can use to format your progress bar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;:bar&lt;/code&gt; the progress bar itself&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:current&lt;/code&gt; current tick number&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:total&lt;/code&gt; total ticks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:elapsed&lt;/code&gt; time elapsed in seconds&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:percent&lt;/code&gt; completion percentage&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:eta&lt;/code&gt; estimated completion time in seconds&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;Lets modify our original example and put &lt;a href=&quot;https://github.com/visionmedia/node-progress&quot;&gt;progress&lt;/a&gt; to a good use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var
  request = require(&amp;#39;request&amp;#39;),
  ProgressBar = require(&amp;#39;progress&amp;#39;),
  fs = require(&amp;#39;fs&amp;#39;)
  ;

var
  req = request(&amp;#39;http://nodejs.org/dist/node-0.0.1.tar.gz&amp;#39;),
  bar
  ;

req
  .on(&amp;#39;data&amp;#39;, function (chunk) {
    bar = bar || new ProgressBar(&amp;#39;Downloading... [:bar] :percent :etas&amp;#39;, {
      complete: &amp;#39;=&amp;#39;,
      incomplete: &amp;#39; &amp;#39;,
      width: 25,
      total: parseInt(req.response.headers[&amp;#39;content-length&amp;#39;])
    });

    bar.tick(chunk.length);
  })
  .pipe(fs.createWriteStream(__dirname + &amp;#39;/node.tar.gz&amp;#39;))
  .on(&amp;#39;close&amp;#39;, function (err) {
    bar.tick(bar.total - bar.curr);
  })
  ;
&lt;/code&gt;&lt;/pre&gt;&lt;div style=&quot;padding: 13px 10px 10px; background: black; text-align: center; border-radius: 3px&quot;&gt;&lt;img src=&quot;http://npmawesome.com/images/posts//progress/progress03.gif&quot;/&gt;&lt;/div&gt;

&lt;p&gt;We even get ETA estimate for free. That&amp;#39;s what I&amp;#39;m talking about!&lt;/p&gt;
&lt;h2 id=&quot;other-modules-to-checkout&quot;&gt;Other modules to checkout&lt;/h2&gt;
&lt;p&gt;Here are a few other modules to check out:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jclulow/node-progbar&quot;&gt;progbar&lt;/a&gt; by &lt;a href=&quot;https://github.com/jclulow&quot;&gt;Joshua M. Clulow&lt;/a&gt; is a straight up alternative.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/bevry/progressbar&quot;&gt;progressbar&lt;/a&gt; by &lt;a href=&quot;https://github.com/balupton&quot;&gt;Benjamin Arthur Lupton&lt;/a&gt; extends &lt;a href=&quot;https://github.com/visionmedia/node-progress&quot;&gt;progress&lt;/a&gt; with chaining, domains, and steps.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Unitech/node-multimeter&quot;&gt;pm2-multimeter&lt;/a&gt; originally by &lt;a href=&quot;https://github.com/substack&quot;&gt;James Halliday&lt;/a&gt; and now up kept by &lt;a href=&quot;https://github.com/Unitech&quot;&gt;Alexandre Strzelewicz&lt;/a&gt; can display multiple progress bars at the same time.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;closing-thoughts&quot;&gt;Closing thoughts&lt;/h2&gt;
&lt;p&gt;It&amp;#39;s really cool to see a CLI application giving meaningful progress feedback. Please don&amp;#39;t forget about user experience when building tools.&lt;/p&gt;
</content>
		</entry>
	
    
    
    
		<entry>
			<title>slate-irc</title>
			<link href="http://npmawesome.com/posts/2014-04-04-slate-irc"/>
			<updated>2014-04-04T13:43:39.000Z</updated>
			<id>http://npmawesome.com/posts/2014-04-04-slate-irc</id>
			<content type="html">&lt;p&gt;&lt;img class=&quot;hide-on-mobile&quot; src=&quot;https://avatars2.githubusercontent.com/u/25254&quot; style=&quot;float: right; margin-left: 1em; width: 100px&quot;/&gt;
&lt;a href=&quot;https://github.com/slate/slate-irc&quot;&gt;slate-irc&lt;/a&gt; is a module by &lt;a href=&quot;https://github.com/visionmedia&quot;&gt;TJ Holowaychuk&lt;/a&gt; that part of the recently released open source IRC client called &lt;a href=&quot;https://github.com/slate/slate&quot;&gt;Slate&lt;/a&gt; and is a general purpose IRC client with simple plugin system.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install slate-irc
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;var irc = require(&amp;#39;slate-irc&amp;#39;);
var net = require(&amp;#39;net&amp;#39;);

var stream = net.connect({
  port: 6667,
  host: &amp;#39;irc.freenode.org&amp;#39;
});

var client = irc(stream);

client.on(&amp;#39;notice&amp;#39;, function(notice) {
  console.log(notice.message);
});

client.nick(&amp;#39;npmawesome-test&amp;#39;);
client.user(&amp;#39;npmawesome-test&amp;#39;, &amp;#39;Alex Gorbatchev&amp;#39;);
client.join(&amp;#39;#flood&amp;#39;);

client.names(&amp;#39;#flood&amp;#39;, function(err, names) {
  if (err) throw err;

  names.sort();
  console.log(names.join(&amp;#39;\n&amp;#39;));

  client.quit();
});
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;plugins&quot;&gt;Plugins&lt;/h2&gt;
&lt;p&gt;Plugins are simply functions that accept the IRC client as an argument. With this you can define methods, listen on events and interact with the client. For example here&amp;#39;s a logger plugin that outputs to stdout:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function logger() {
  return function(irc) {
    irc.stream.pipe(process.stdout);
  }
}

client.use(logger());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here&amp;#39;s a slightly more complex example of a PONG plugin responding to PING messages:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function pong() {
  return function(irc) {
    irc.on(&amp;#39;data&amp;#39;, function(msg) {
      if (&amp;#39;PING&amp;#39; === msg.command)
        irc.write(&amp;#39;PONG :&amp;#39; + msg.trailing);
    });
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;closing-thoughts&quot;&gt;Closing Thoughts&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/slate/slate-irc&quot;&gt;slate-irc&lt;/a&gt; can serve as a core of a regular IRC client or you can write an IRC bot for your team chat. Checkout the &lt;a href=&quot;https://github.com/slate/slate-irc&quot;&gt;github page&lt;/a&gt; for full documentation.&lt;/p&gt;
</content>
		</entry>
	
    
    
    
		<entry>
			<title>Links for Apr 4, 2014</title>
			<link href="http://npmawesome.com/posts/2014-04-03-links"/>
			<updated>2014-04-04T03:00:00.000Z</updated>
			<id>http://npmawesome.com/posts/2014-04-03-links</id>
			<content type="html">&lt;h2 id=&quot;npm-inc&quot;&gt;NPM Inc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/80997676347/nebulous-profit-meditations&quot;&gt;Nebulous Profit Meditations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.modulus.io/isaac-interview&quot;&gt;Meet the face behind NPM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;apps&quot;&gt;Apps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://koala-app.com/&quot;&gt;Koala&lt;/a&gt; is a GUI application for Less, Sass, Compass and CoffeeScript compilation, to help web developers to use them more efficiently. Koala can run in windows, linux and mac.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://zedapp.org/&quot;&gt;Zed&lt;/a&gt; is a fully offline-capable, open source, keyboard-focused, Chrome-based text and code editor you can use to edit local files as well as remote files on any server.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;articles-slides&quot;&gt;Articles &amp;amp; Slides&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/ckarande/top-overlooked-security-threats-to-node-dot-js-web-applications&quot;&gt;Top Overlooked Security Threats to Node.js Web Applications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sitepoint.com/testing-across-node-js-versions-using-docker/&quot;&gt;Testing Across Node.js Versions Using Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.codefellows.org/blogs/complete-list-of-javascript-tools&quot;&gt;A List of Foundational JavaScript Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;github&quot;&gt;GitHub&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ShiftForward/mucuchies&quot;&gt;mucuchies&lt;/a&gt; - A neat looking pluggable client-side dashboard.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wagerfield/parallax&quot;&gt;parallax&lt;/a&gt; - Parallax Engine that reacts to the orientation of a smart device.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/soygul/koan&quot;&gt;KOAN&lt;/a&gt; stack (Koa, Angular, Node, Mongo, WebSockets) for real-time full-stack JavaScript web development.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;misc&quot;&gt;Misc&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.forecast.io/docs/v2&quot;&gt;forecast.io weather API&lt;/a&gt; is open and has a pretty high free rate limit.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.crypto101.io/&quot;&gt;Crypto 101&lt;/a&gt; is an introductory course on cryptography, freely available for programmers of all ages and skill levels.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.gitbook.io/&quot;&gt;GitBook&lt;/a&gt; is a webapp to build beautiful programming books and exercises using GitHub/Git and Markdown.&lt;/li&gt;
&lt;/ul&gt;
</content>
		</entry>
	
</feed>
